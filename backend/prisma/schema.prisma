// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        Int      @id @default(autoincrement())
  Username  String
  Email     String   @unique
  Password  String
  CreatedAt DateTime @default(now())
}

model Partner {
  id           Int      @id
  CompanyName  String
  Contact      String
  Email        String
  Address      String
  ESI          String
  PF           String
  PAN          String
  PAN_No       String
  MOA          String
  CIN          String
  GST          String
  TradeLicense String
  MSMC         String
  CreatedAt    DateTime @default(now())
  UpdatedAt    DateTime @default(now())

  Username String
  Password String

  Employee Employee[]
}

model PartnerRequest {
  id           Int           @id @default(autoincrement())
  CompanyName  String
  Contact      String
  Email        String
  Address      String
  ESI          String
  PF           String
  PAN          String
  PAN_No       String
  MOA          String
  CIN          String
  GST          String
  TradeLicense String
  MSMC         String
  Status       RequestStatus @default(PENDING)
  CreatedAt    DateTime      @default(now())
  UpdatedAt    DateTime      @default(now())
}

model Employee {
  id                Int    @id @default(autoincrement())
  // personal details
  Name              String
  DOB               String
  Email             String @unique
  Mobile            String @unique
  Address           String
  Pic               String
  // identity documents
  AadhaarNo         String @unique
  Aadhaar           String
  PanNo             String @unique
  Pan               String
  Voter             String
  // education details
  Qualification     String
  Institution       String
  YearOfPassing     String
  Percentage        Float
  Marksheet         String
  // bank details
  AccountHolderName String
  AccountNumber     String @unique
  IFSCCode          String
  BankName          String
  Branch            String
  AccountType       String
  // job details
  CompanyCode       Int
  JoiningDate       String
  Post              String
  PostCategory      String
  Amount            Float
  PaymentFrequency  String
  AccessLevel       AccessLevel

  //account details
  Username          String @unique
  Password          String

  CreatedAt DateTime @default(now())
  UpdatedAt DateTime @default(now())

  SuperiorId Int?
  Superior   Employee?  @relation(name: "tree", fields: [SuperiorId], references: [id], onDelete: Cascade)
  Junior     Employee[] @relation(name: "tree")
  Company    Partner    @relation(fields: [CompanyCode], references: [id], onDelete: Cascade)
}

enum RequestStatus {
  PENDING
  APPROVED
  REJECTED
}

enum AccessLevel {
  EMPLOYEE
  ADMIN
  MANAGER
}
